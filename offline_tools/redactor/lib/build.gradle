/*
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.google.protobuf' version "0.8.7"
}

buildDir = "/tmp/gradle_build/redactor"

dependencies {
    implementation "org.dcm4che:dcm4che-core:3.3.8"
    implementation "org.dcm4che:dcm4che-imageio:3.3.8"

    protobuf 'com.google.protobuf:protobuf-java:3.7.1'

    api "com.google.api.grpc:proto-google-common-protos:1.16.0"

    testImplementation 'junit:junit:4.12'
    testImplementation 'com.google.truth:truth:0.39'
    testImplementation 'commons-io:commons-io:2.6'
}

protobuf {
  generatedFilesBaseDir = "/tmp/gradle_build/redactor/gen"
  protoc {
    artifact = "com.google.protobuf:protoc:3.7.1";
  }
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allJava
  from sourceSets.main.proto
  archiveClassifier = 'sources'
}

javadoc {
  source "${buildDir}/gen"
  classpath = sourceSets.main.runtimeClasspath
}

task javadocJar(type: Jar) {
  from javadoc
  archiveClassifier = 'javadoc'
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifactId = 'offline-dicom-redactor'
      from components.java
      artifact sourcesJar
      artifact javadocJar
      pom {
        name = "Offline DICOM Redactor"
        description = "A Java library for redacting sensitive data contained in DICOM tags."
        url = 'https://github.com/GoogleCloudPlatform/healthcare-deid'
        licenses {
          license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            name = "The Cloud Healthcare Team"
            email = "cloud-healthcare-api-help@google.com"
          }
        }
        scm {
          connection = 'scm:git:git://github.com/GoogleCloudPlatform/healthcare-deid.git'
          developerConnection = 'scm:git:ssh://github.com/GoogleCloudPlatform/healthcare-deid.git'
          url = 'https://github.com/GoogleCloudPlatform/healthcare-deid/tree/master'
        }
      }
    }
  }
  repositories {
    maven {
      def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
      def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
      url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
      credentials {
        username ossrhUsername
        password ossrhPassword
      }
    }
  }
}

signing {
  sign publishing.publications.mavenJava
}